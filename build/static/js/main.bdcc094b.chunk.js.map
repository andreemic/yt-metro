{"version":3,"sources":["Contexts/ModalProvider.js","Popup.js","index.js"],"names":["React","createContext","Popup","ReactDOM","render","document","getElementById"],"mappings":"yPAG4BA,IAAMC,cAAc,ICWjCC,MANf,WACE,OAAO,wCCLTC,IAASC,OACP,oCACE,kBAAC,EAAD,OACGC,SAASC,eAAe,kB","file":"static/js/main.bdcc094b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      if (event.source !== window) return;\n      if (event.data.type && (event.data.type === \"EXTENSION_ID_RESULT\")) {\n        setExtensionId(event.data.extensionId);\n      }\n    });\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        extensionId,\n        getExtensionId,\n        windowPosition,\n      }}\n    >\n      {children}\n      <img src={\"images/airplane.png\"}/>\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","import React from 'react';\nimport './Popup.css';\nimport Modal from './Components/Modal';\nimport ModalProvider from './Contexts/ModalProvider';\n\n/**\n * @return {null}\n */\nfunction Popup() {\n  return <div>\n      wassup\n  </div>;\n}\n\nexport default Popup;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Popup from './Popup';\n\nReactDOM.render(\n  <>\n    <Popup />\n  </>, document.getElementById('modal-window'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}